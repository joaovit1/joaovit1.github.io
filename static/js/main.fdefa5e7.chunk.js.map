{"version":3,"sources":["serviceWorker.js","reducers/inputChangeReducer.js","reducers/gameReducer.js","reducers/errorReducer.js","reducers/playerReducer.js","reducers/index.js","actions/actionTypes.js","store/index.js","actions/index.js","components/cell/Cell.js","components/tictactoe/TitleLabel.js","components/tictactoe/TictactoeBoard.js","components/tictactoe/TictactoeForm.js","components/tictactoe/TicTacToe.js","components/home/Home.js","components/pagenotfound/Pagenotfound.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","player1","player2","gameStatus","error","values","playerSymbol","Reducers","combineReducers","inputvalue","state","arguments","length","undefined","action","type","Object","objectSpread","gameValue","errorValue","playerValue","Store","createStore","__REDUX_DEVTOOLS_EXTENSION__","inputChange","gameChange","errorChange","errorStatus","playerChange","reset","Cell","handleClick","_this","props","onClick","keys","value","this","react_default","a","createElement","className","style","width","height","backgroundColor","display","Component","TitleLabel","players","Button","TictactoeBoard","_this$props","newValues","toConsumableArray","verifyWin","verifyTie","compare","slice","i","_this$props2","tictactoe_TitleLabel","cell_Cell","TictactoeForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","id","_this$state","Row","Col","onChange","marginTop","TicTacToe","tictactoe_TictactoeForm","handleKeyUp","tictactoe_TictactoeBoard","connect","store","dispatch","bindActionCreators","HomeB","Button_default","react_router_dom","to","Pagenotfound","ReactDOM","render","es","react_router","path","exact","component","Home","PageNotFound","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdefa5e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { INPUT_UPDATE_VALUE, RESET } from '../actions/actionTypes';\r\nconst initialState = {\r\n    player1:'',\r\n    player2:''\r\n};\r\nexport const inputChangeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INPUT_UPDATE_VALUE:\r\n      return {\r\n        ...state,\r\n        player1: action.player1,\r\n        player2: action.player2\r\n      };\r\n    case RESET:\r\n      return {\r\n        ...state,\r\n        player1: initialState.player1,\r\n        player2: initialState.player2\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { GAME_STATUS, RESET } from '../actions/actionTypes';\r\nconst initialState = {\r\n    gameStatus:\"Waiting\"\r\n};\r\nexport const gameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case GAME_STATUS:\r\n          return {\r\n            ...state,\r\n            gameStatus: action.gameStatus,        \r\n          };\r\n      case RESET:\r\n          return {\r\n            ...state,\r\n            gameStatus: initialState.gameStatus,        \r\n          };\r\n      default:\r\n        return state;\r\n  }\r\n};","import { ERROR_STATUS, RESET } from '../actions/actionTypes';\r\nconst initialState = {\r\n    error:false\r\n};\r\nexport const errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n      case ERROR_STATUS:\r\n          return {\r\n            ...state,\r\n            error: action.error,        \r\n          };\r\n      case RESET:\r\n          return {\r\n            ...state,\r\n            error: initialState.error,        \r\n          };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { PLAYER_UPDATE_VALUE, RESET } from '../actions/actionTypes';\r\nconst initialState = {\r\n    values:[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\r\n    playerSymbol:'X',    \r\n};\r\nexport const playerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PLAYER_UPDATE_VALUE:\r\n      return {\r\n        ...state,\r\n        values: action.values,\r\n        playerSymbol: action.playerSymbol,        \r\n      };\r\n    case RESET:\r\n      return {\r\n        ...state,\r\n        values: initialState.values,\r\n        playerSymbol: initialState.playerSymbol,        \r\n      };      \r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { inputChangeReducer } from './inputChangeReducer'\r\nimport { gameReducer } from './gameReducer'\r\nimport { errorReducer } from './errorReducer'\r\nimport { playerReducer } from './playerReducer'\r\n\r\nexport const Reducers = combineReducers({\r\n  inputvalue: inputChangeReducer,\r\n  gameValue: gameReducer,\r\n  errorValue: errorReducer,\r\n  playerValue: playerReducer,  \r\n});","export const INPUT_UPDATE_VALUE = 'INPUT_UPDATE_VALUE';\r\nexport const GAME_STATUS = 'GAME_STATUS';\r\nexport const ERROR_STATUS = 'ERROR_STATUS';\r\nexport const PLAYER_UPDATE_VALUE = 'PLAYER_UPDATE_VALUE';\r\nexport const RESET = 'RESET';","import { createStore } from 'redux';\r\nimport { Reducers } from '../reducers';\r\nexport const Store = createStore(Reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import { INPUT_UPDATE_VALUE, GAME_STATUS, ERROR_STATUS, PLAYER_UPDATE_VALUE, RESET } from './actionTypes';\r\n\r\nexport const inputChange = (player1,player2) => ({\r\n    type: INPUT_UPDATE_VALUE,\r\n    player1: player1,\r\n    player2: player2\r\n});\r\n\r\nexport const gameChange = gameStatus => ({\r\n    type: GAME_STATUS,\r\n    gameStatus: gameStatus        \r\n});\r\n\r\nexport const errorChange = errorStatus => ({\r\n    type: ERROR_STATUS,\r\n    error: errorStatus    \r\n});\r\n\r\nexport const playerChange = (values,playerSymbol) => ({\r\n    type: PLAYER_UPDATE_VALUE,\r\n    values:values,\r\n    playerSymbol:playerSymbol,\r\n});\r\n\r\nexport const reset = () => ({\r\n    type: RESET\r\n});","import React, {Component} from 'react';\r\nimport './cell.css'\r\n\r\nclass Cell extends Component {\r\n    handleClick = () =>{        \r\n        this.props.onClick(this.props.keys);\r\n    }\r\n    render(){\r\n        const {value} = this.props;\r\n        return (\r\n                value==='X'?\r\n                    <div className=\"cell\" style={{width:\"33%\",height:\"100%\",backgroundColor:\"red\",display:\"inline-block\"}} onClick={this.handleClick}>\r\n                    {this.props.value}\r\n                    </div>\r\n                :\r\n                value==='O'?\r\n                    <div className=\"cell\" style={{width:\"33%\",height:\"100%\",backgroundColor:\"blue\",display:\"inline-block\"}} onClick={this.handleClick}>\r\n                    {this.props.value}\r\n                    </div>\r\n                :\r\n                    <div className=\"cell\" style={{width:\"33%\",height:\"100%\",backgroundColor:\"white\",display:\"inline-block\"}} onClick={this.handleClick}>\r\n                    -\r\n                    </div>         \r\n        );   \r\n    }\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport {Button} from 'react-bootstrap/';\r\nconst TitleLabel = (props) => {\r\n    const {players,playerSymbol,gameStatus,reset} = props;    \r\n    return (    \r\n        gameStatus===\"Win\"?\r\n            <div className=\"title\" style={{backgroundColor:'limegreen'}}>\r\n            {players[(playerSymbol === 'X'? 0 : 1)]} venceu!<br/>\r\n            <Button onClick={reset} className=\"resetButton\">Jogar novamente</Button>\r\n            </div>\r\n        :\r\n        gameStatus===\"Tie\"?\r\n            <div className=\"title\" style={{backgroundColor:'grey'}}>\r\n            Empate!<br/>\r\n            <Button onClick={reset} className=\"resetButton\">Jogar novamente</Button>\r\n            </div>\r\n        :                        \r\n            <div className=\"title\">\r\n            Vez do(a) {players[(playerSymbol === 'X'? 0 : 1)]}\r\n            </div>\r\n    );\r\n};\r\nexport default TitleLabel;","import React,{Component} from 'react';\r\n//import { connect } from 'react-redux';\r\nimport Cell from '../cell/Cell.js'\r\nimport TitleLabel from './TitleLabel'\r\n\r\nclass TictactoeBoard extends Component {    \r\n    \r\n     handleClick = (keys) =>{\r\n        const {playerSymbol,playerChange,values,gameChange,gameStatus} = this.props;\r\n         \r\n        if(gameStatus!==\"Win\" && gameStatus!==\"Tie\"){\r\n            var newValues = [...values];\r\n            \r\n            if(newValues[keys]===''){\r\n                newValues[keys] = playerSymbol;\r\n                \r\n                if(this.verifyWin(newValues)){\r\n                    gameChange('Win');\r\n                    playerChange(newValues,playerSymbol);\r\n                }\r\n                else if(this.verifyTie(newValues)){\r\n                    gameChange('Tie');\r\n                    playerChange(newValues,playerSymbol);\r\n                }\r\n                else{\r\n                    if(playerSymbol==='X'){\r\n                        playerChange(newValues,'O');\r\n                    }\r\n                    else{\r\n                        playerChange(newValues,'X');                                        \r\n                    }   \r\n                }\r\n            }\r\n        }                         \r\n    }\r\n\r\n    verifyWin(values){\r\n        if(this.compare(values.slice(0,3)))\r\n            return true;\r\n        else if (this.compare(values.slice(3,6)))\r\n            return true;\r\n        else if (this.compare(values.slice(6,9)))\r\n            return true;\r\n        else if (this.compare([values[0],values[3],values[6]]))\r\n            return true;\r\n        else if (this.compare([values[1],values[4],values[7]]))\r\n            return true;\r\n        else if (this.compare([values[2],values[5],values[8]]))\r\n            return true;\r\n        else if (this.compare([values[0],values[4],values[8]]))\r\n            return true;\r\n        else if (this.compare([values[2],values[4],values[6]]))\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    verifyTie(values){\r\n        for(var i=0;i<9;i++){\r\n            if(values[i]==='')\r\n                return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    compare(a){\r\n        if(a[0]===a[1] && a[1]===a[2])\r\n            if(a[0]!=='')\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        const {players,playerSymbol,values,reset,gameStatus} = this.props;        \r\n        return (            \r\n            <div className=\"tictactoe\">\r\n                <TitleLabel \r\n                    players={players} \r\n                    playerSymbol={playerSymbol} \r\n                    gameStatus={gameStatus} \r\n                    reset={reset}\r\n                />\r\n                <div className=\"line\" style={{width:\"100vw\",height:\"29vh\"}}>\r\n                    <Cell keys=\"0\" value={values[0]} onClick={this.handleClick}/>\r\n                    <Cell keys=\"1\" value={values[1]} onClick={this.handleClick}/>\r\n                    <Cell keys=\"2\" value={values[2]} onClick={this.handleClick}/>            \r\n                </div>\r\n                <div className=\"line\" style={{width:\"100vw\",height:\"29vh\"}}>\r\n                    <Cell keys=\"3\" value={values[3]} onClick={this.handleClick}/>\r\n                    <Cell keys=\"4\" value={values[4]} onClick={this.handleClick}/>\r\n                    <Cell keys=\"5\" value={values[5]} onClick={this.handleClick}/>\r\n                </div>\r\n                <div className=\"line\" style={{width:\"100vw\",height:\"29vh\"}}>\r\n                    <Cell keys=\"6\" value={values[6]} onClick={this.handleClick}/>\r\n                    <Cell keys=\"7\" value={values[7]} onClick={this.handleClick}/>\r\n                    <Cell keys=\"8\" value={values[8]} onClick={this.handleClick}/>\r\n                </div>\r\n            </div>\r\n        );}\r\n}\r\n\r\n//const mapStateToProps = store => ({\r\n//    playerSymbol: store.playerValue.playerSymbol,\r\n//    values: store.playerValue.values,\r\n//});\r\n//const mapDispatchToProps = dispatch =>\r\n//    bindActionCreators({ playerChange/*,reset*/ }, dispatch);  \r\nexport default /*connect(mapStateToProps, mapDispatchToProps)*/ (TictactoeBoard);\r\n","import React,{Component} from 'react';\r\nimport {Col,Row,Button} from 'react-bootstrap/';\r\n\r\nclass TictactoeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            player1:[],\r\n            player2:[]\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {        \r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    \r\n    render(){ \r\n        const {error,handleClick} = this.props;\r\n        const {player1,player2} = this.state;\r\n        return (\r\n            <div className=\"tictactoe form container\">\r\n               <Row className=\"title\">Digite o nome dos jogadores</Row>  \r\n               <Row>\r\n                   {\r\n                        error && \r\n                        <div className=\"errormessage\">Você precisa escrever o nome dos jogadores antes de começar o jogo!</div>\r\n                   }\r\n               </Row>             \r\n                <Row className=\"players\">\r\n                    <Col>\r\n                        Player 1<br/>\r\n                        <input id=\"player1\" type=\"text\" value={player1} onChange={this.handleChange}/>\r\n                    </Col>\r\n                    <Col>\r\n                        Player 2<br/>\r\n                        <input id=\"player2\" type=\"text\" value={player2} onChange={this.handleChange}/>\r\n                    </Col>                    \r\n                </Row>\r\n                <Row style={{marginTop:\"20px\"}}><Button onClick={() => handleClick(player1,player2)}>Começar</Button></Row>\r\n            </div>\r\n        );}\r\n\r\n};\r\nexport default TictactoeForm;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { inputChange, gameChange, errorChange, playerChange, reset } from '../../actions';\r\nimport TictactoeBoard from './TictactoeBoard'\r\nimport TictactoeForm from './TictactoeForm'\r\nimport './tictactoe.css'\r\n\r\nclass TicTacToe extends Component {\r\n    handleClick = (player1,player2) => {\r\n        const {gameChange,inputChange,errorChange} = this.props;\r\n        if(player1!=='' && player2!==''){\r\n            gameChange(\"Started\");\r\n            inputChange(player1,player2);\r\n        }\r\n        else{\r\n            errorChange(true);\r\n        }\r\n    }\r\n    \r\n    reset = () => {\r\n        const {reset} = this.props;                \r\n        reset();\r\n    }\r\n    \r\n    render(){        \r\n        const {player1,player2,gameStatus,error,playerChange,playerSymbol,values,gameChange,reset} = this.props;        \r\n        return (\r\n            <div>\r\n            {\r\n                gameStatus==='Waiting'?\r\n                    <TictactoeForm\r\n                        handleClick={this.handleClick}\r\n                        handleKeyUp={this.handleKeyUp}\r\n                        player1={player1}\r\n                        player2={player2}\r\n                        gameStatus={gameStatus}\r\n                        error={error}\r\n                    />                    \r\n                :\r\n                    <TictactoeBoard \r\n                        players={[player1,player2]} \r\n                        reset={reset}\r\n                        playerChange={playerChange}\r\n                        playerSymbol={playerSymbol}\r\n                        values={values}\r\n                        gameChange={gameChange}            \r\n                        gameStatus={gameStatus}            \r\n                    />\r\n            }\r\n            </div>      \r\n        );}\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    player1: store.inputvalue.player1,\r\n    player2: store.inputvalue.player2,\r\n    gameStatus: store.gameValue.gameStatus,\r\n    error: store.errorValue.error,\r\n    playerSymbol: store.playerValue.playerSymbol,\r\n    values: store.playerValue.values,\r\n});\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators({ inputChange,gameChange,errorChange,playerChange,reset }, dispatch);  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(TicTacToe);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './home.css'\r\n\r\n//class Home extends Component {\r\n//    constructor(props) {\r\n//        super(props);\r\n//\r\n//    }\r\n//    \r\n//    render(){\r\n//        return (\r\n//            <div className=\"home container\">\r\n//                Bem-vindo!<br/>\r\n//                <Button><Link to=\"/tictactoe\">Jogar Tictactoe</Link></Button>\r\n//            </div>            \r\n//        );}\r\n//}\r\n//\r\n//export default Home;\r\nconst HomeB = () => {\r\n    return (\r\n            <div className=\"home container\">\r\n                Bem-vindo(a)!<br/>\r\n                <Button><Link to=\"/TicTacToe\">Jogar Tictactoe</Link></Button>\r\n            </div>            \r\n        )\r\n}\r\n\r\nexport default HomeB;","import React,{Component} from 'react';\r\n\r\nclass Pagenotfound extends Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n            Página não encontrada\r\n            </div>\r\n        );}\r\n}\r\n\r\nexport default Pagenotfound;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { Store } from './store';\nimport TicTacToe from './components/tictactoe/TicTacToe'\nimport Home from './components/home/Home'\nimport PageNotFound from './components/pagenotfound/Pagenotfound'\n\nReactDOM.render(\n    <Provider store={Store}>\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact={true} component={Home} />\n                <Route path=\"/TicTacToe\" component={TicTacToe} />                \n                <Route path=\"*\" component={PageNotFound} />\n            </Switch>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}